version: "3.2"

services:
  php:
    build: 
      context: .
      dockerfile: './.docker/php/Dockerfile' 
      args:
        UID: ${UID}
        GID: ${GID}
    networks:
      - backend
    volumes:
      - ./config:/var/www/html/config
      - ./templates:/var/www/html/templates
      - ./modules:/var/www/html/modules
      - ./public:/var/www/html/public
      - ./.env:/var/www/html/.env
      - vendor:/var/www/html/vendor # Shared with the composer service. Built packages will be mounted here.

  webserver:
    build: 
      context: .
      dockerfile: './.docker/apache/Dockerfile'
    env_file:
      './.docker/apache/.env'
    depends_on:
      - php
      - database
    networks:
      - frontend
      - backend
      - default
    expose:
      - 80
    volumes:
      - ./public:/var/www/html/public

  database:
    image: mariadb:10.3
    env_file:
      './.docker/mariadb/.env'
    volumes:
      - database:/var/lib/mysql
      - ./.docker/mariadb/seed:/docker-entrypoint-initdb.d:ro # Any SQL or SQL.GZ files will be imported into the DB on first container load.
    networks:
      - backend
    labels:
      - db.network.tunnel.hostname=mysite.test

  composer:
    build: 
      context: .
      dockerfile: './.docker/composer/Dockerfile'
      args:
        UID: ${UID}
        GID: ${GID}
    volumes:
      - ./composer.json:/app/composer.json # Mount the hosts composer JSON file in this container.
      - ./composer.lock:/app/composer.lock
      - vendor:/app/vendor # Named VOLUME shared with the php service for installed composer packages.
    command: "composer install"

  node:
    build: 
      context: .
      dockerfile: './.docker/node/Dockerfile'
      args:
        UID: ${UID}
        GID: ${GID}
    volumes:
      - npm-cache:/home/plato/.npm
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./mix-manifest.json:/app/mix-manifest.json
      - ./public/mix-manifest.json:/app/public/mix-manifest.json
      - ./webpack.mix.js:/app/webpack.mix.js
      - ./public/js:/app/public/js
      - ./public/css:/app/public/css
      - ./public/scss:/app/public/scss
    command: yarn install-dev

networks:
  default:
    external:
      name: nginx-proxy
  frontend:
  backend:

volumes:
  database:
  vendor:
  npm-cache: